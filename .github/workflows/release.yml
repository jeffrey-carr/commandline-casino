name: release

on:
  push:
    tags:
      - "v*.*.*"   # triggers on tags like v0.0.1, v1.2.3

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    env:
      CGO_ENABLED: 0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"

      - name: Build & Package
        env:
          APP_NAME: commandline_casino
          MAIN_PATH: .   # your main.go is at repo root
        run: |
          set -euo pipefail

          OUT="${APP_NAME}_${{ github.ref_name }}_${{ matrix.goos }}_${{ matrix.goarch }}"
          EXT=$([ "${{ matrix.goos }}" = "windows" ] && echo ".exe" || echo "")

          mkdir -p "$OUT"

          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} CGO_ENABLED=${CGO_ENABLED} \
            go build -ldflags "-s -w -X main.version=${GITHUB_REF_NAME}" \
            -o "$OUT/${APP_NAME}${EXT}" \
            "$MAIN_PATH"

          cp README.md LICENSE "$OUT" 2>/dev/null || true

          (cd "$OUT" && zip -r "../${OUT}.zip" .)

      - name: Upload artifact (to pass to release job)
        uses: actions/upload-artifact@v4
        with:
          name: bins
          path: "*.zip"

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write   # required to create a GitHub Release and upload assets
    steps:
      - name: Download artifacts
        uses: ac
